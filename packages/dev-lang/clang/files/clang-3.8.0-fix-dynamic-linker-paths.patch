--- Tools.cpp.orig	2016-05-19 00:00:33.245586049 +0000
+++ Tools.cpp	2016-05-19 00:52:21.968066392 +0000
@@ -8632,9 +8632,14 @@
       return "/system/bin/linker64";
     else
       return "/system/bin/linker";
-  } else if (Arch == llvm::Triple::x86 || Arch == llvm::Triple::sparc ||
-             Arch == llvm::Triple::sparcel)
-    return "/lib/ld-linux.so.2";
+  } else if (Arch == llvm::Triple::x86) {
+    if (ToolChain.getTriple().getEnvironment() == llvm::Triple::Musl)
+      return "/usr/i686-pc-linux-musl/lib/ld-musl-i389.so.1";
+    else
+      return "/usr/i686-pc-linux-gnu/lib/ld-linux.so.2";
+  }
+  else if (Arch == llvm::Triple::sparc || Arch == llvm::Triple::sparcel)
+    return "/usr/i686-pc-linux-gnu/lib/ld-linux.so.2";
   else if (Arch == llvm::Triple::aarch64)
     return "/lib/ld-linux-aarch64.so.1";
   else if (Arch == llvm::Triple::aarch64_be)
@@ -8642,16 +8647,26 @@
   else if (Arch == llvm::Triple::arm || Arch == llvm::Triple::thumb) {
     if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
         arm::getARMFloatABI(ToolChain, Args) == arm::FloatABI::Hard)
-      return "/lib/ld-linux-armhf.so.3";
+      return "/usr/@@ARMHF_TARGET@@/lib/ld-linux-armhf.so.3";
     else
-      return "/lib/ld-linux.so.3";
+      return "/usr/@@ARM_TARGET@@/lib/ld-linux.so.3";
   } else if (Arch == llvm::Triple::armeb || Arch == llvm::Triple::thumbeb) {
     // TODO: check which dynamic linker name.
     if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
         arm::getARMFloatABI(ToolChain, Args) == arm::FloatABI::Hard)
-      return "/lib/ld-linux-armhf.so.3";
+      return "/usr/@@ARMHF_TARGET@@/lib/ld-linux-armhf.so.3";
     else
-      return "/lib/ld-linux.so.3";
+      switch (ToolChain.getTriple().getEnvironment()) {
+        case llvm::Triple::Musl:
+        case llvm::Triple::MuslEABI:
+          return "/usr/@@ARMHF_TARGET@@/lib/ld-musl-arm.so.1";
+        case llvm::Triple::MuslEABIHF:
+          return "/usr/@@ARMHF_TARGET@@/lib/ld-musl-armhf.so.1";
+        case llvm::Triple::GNUEABIHF:
+          return "/usr/@@ARMHF_TARGET@@/lib/ld-linux-armhf.so.1";
+        default:
+          return "/usr/@@ARMHF_TARGET@@/lib/ld-linux.so.3";
+        }
   } else if (Arch == llvm::Triple::mips || Arch == llvm::Triple::mipsel ||
              Arch == llvm::Triple::mips64 || Arch == llvm::Triple::mips64el) {
     std::string LibDir =
@@ -8669,11 +8684,11 @@
 
     return (LibDir + "/" + LibName).str();
   } else if (Arch == llvm::Triple::ppc)
-    return "/lib/ld.so.1";
+    return "/usr/powerpc64-unknown-linux-gnueabi/lib/ld.so.1";
   else if (Arch == llvm::Triple::ppc64) {
     if (ppc::hasPPCAbiArg(Args, "elfv2"))
-      return "/lib64/ld64.so.2";
-    return "/lib64/ld64.so.1";
+      return "/usr/powerpc64-unknown-linux-gnueabi/lib/ld64.so.1";
+    return "/usr/powerpc64-unknown-linux-gnueabi/lib/ld.so.1";
   } else if (Arch == llvm::Triple::ppc64le) {
     if (ppc::hasPPCAbiArg(Args, "elfv1"))
       return "/lib64/ld64.so.1";
@@ -8684,9 +8699,11 @@
     return "/lib64/ld-linux.so.2";
   else if (Arch == llvm::Triple::x86_64 &&
            ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUX32)
-    return "/libx32/ld-linux-x32.so.2";
+    return "/usr/x86_64-pc-linux-gnu/lib/ld-linux-x32.so.2";
+  else if (ToolChain.getTriple().getEnvironment() == llvm::Triple::Musl)
+    return "/usr/x86_64-pc-linux-musl/lib/ld-musl-x86_64.so.1";
   else
-    return "/lib64/ld-linux-x86-64.so.2";
+    return "/usr/x86_64-pc-linux-gnu/lib/ld-linux-x86-64.so.2";
 }
 
 static void AddRunTimeLibs(const ToolChain &TC, const Driver &D,
